/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as PostsUsePostsImport } from './routes/posts/usePosts'
import { Route as PostsUsePostImport } from './routes/posts/usePost'
import { Route as PostsCreatePostActionImport } from './routes/posts/createPostAction'
import { Route as PostsPostsImport } from './routes/posts/Posts'
import { Route as PostsPostDetailsImport } from './routes/posts/PostDetails'
import { Route as PostsCreatePostFormImport } from './routes/posts/CreatePostForm'
import { Route as PostsCreateCommentFormImport } from './routes/posts/CreateCommentForm'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PostsUsePostsRoute = PostsUsePostsImport.update({
  id: '/posts/usePosts',
  path: '/posts/usePosts',
  getParentRoute: () => rootRoute,
} as any)

const PostsUsePostRoute = PostsUsePostImport.update({
  id: '/posts/usePost',
  path: '/posts/usePost',
  getParentRoute: () => rootRoute,
} as any)

const PostsCreatePostActionRoute = PostsCreatePostActionImport.update({
  id: '/posts/createPostAction',
  path: '/posts/createPostAction',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostsRoute = PostsPostsImport.update({
  id: '/posts/Posts',
  path: '/posts/Posts',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostDetailsRoute = PostsPostDetailsImport.update({
  id: '/posts/PostDetails',
  path: '/posts/PostDetails',
  getParentRoute: () => rootRoute,
} as any)

const PostsCreatePostFormRoute = PostsCreatePostFormImport.update({
  id: '/posts/CreatePostForm',
  path: '/posts/CreatePostForm',
  getParentRoute: () => rootRoute,
} as any)

const PostsCreateCommentFormRoute = PostsCreateCommentFormImport.update({
  id: '/posts/CreateCommentForm',
  path: '/posts/CreateCommentForm',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/posts/CreateCommentForm': {
      id: '/posts/CreateCommentForm'
      path: '/posts/CreateCommentForm'
      fullPath: '/posts/CreateCommentForm'
      preLoaderRoute: typeof PostsCreateCommentFormImport
      parentRoute: typeof rootRoute
    }
    '/posts/CreatePostForm': {
      id: '/posts/CreatePostForm'
      path: '/posts/CreatePostForm'
      fullPath: '/posts/CreatePostForm'
      preLoaderRoute: typeof PostsCreatePostFormImport
      parentRoute: typeof rootRoute
    }
    '/posts/PostDetails': {
      id: '/posts/PostDetails'
      path: '/posts/PostDetails'
      fullPath: '/posts/PostDetails'
      preLoaderRoute: typeof PostsPostDetailsImport
      parentRoute: typeof rootRoute
    }
    '/posts/Posts': {
      id: '/posts/Posts'
      path: '/posts/Posts'
      fullPath: '/posts/Posts'
      preLoaderRoute: typeof PostsPostsImport
      parentRoute: typeof rootRoute
    }
    '/posts/createPostAction': {
      id: '/posts/createPostAction'
      path: '/posts/createPostAction'
      fullPath: '/posts/createPostAction'
      preLoaderRoute: typeof PostsCreatePostActionImport
      parentRoute: typeof rootRoute
    }
    '/posts/usePost': {
      id: '/posts/usePost'
      path: '/posts/usePost'
      fullPath: '/posts/usePost'
      preLoaderRoute: typeof PostsUsePostImport
      parentRoute: typeof rootRoute
    }
    '/posts/usePosts': {
      id: '/posts/usePosts'
      path: '/posts/usePosts'
      fullPath: '/posts/usePosts'
      preLoaderRoute: typeof PostsUsePostsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/posts/CreateCommentForm': typeof PostsCreateCommentFormRoute
  '/posts/CreatePostForm': typeof PostsCreatePostFormRoute
  '/posts/PostDetails': typeof PostsPostDetailsRoute
  '/posts/Posts': typeof PostsPostsRoute
  '/posts/createPostAction': typeof PostsCreatePostActionRoute
  '/posts/usePost': typeof PostsUsePostRoute
  '/posts/usePosts': typeof PostsUsePostsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/posts/CreateCommentForm': typeof PostsCreateCommentFormRoute
  '/posts/CreatePostForm': typeof PostsCreatePostFormRoute
  '/posts/PostDetails': typeof PostsPostDetailsRoute
  '/posts/Posts': typeof PostsPostsRoute
  '/posts/createPostAction': typeof PostsCreatePostActionRoute
  '/posts/usePost': typeof PostsUsePostRoute
  '/posts/usePosts': typeof PostsUsePostsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/posts/CreateCommentForm': typeof PostsCreateCommentFormRoute
  '/posts/CreatePostForm': typeof PostsCreatePostFormRoute
  '/posts/PostDetails': typeof PostsPostDetailsRoute
  '/posts/Posts': typeof PostsPostsRoute
  '/posts/createPostAction': typeof PostsCreatePostActionRoute
  '/posts/usePost': typeof PostsUsePostRoute
  '/posts/usePosts': typeof PostsUsePostsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/posts/CreateCommentForm'
    | '/posts/CreatePostForm'
    | '/posts/PostDetails'
    | '/posts/Posts'
    | '/posts/createPostAction'
    | '/posts/usePost'
    | '/posts/usePosts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/posts/CreateCommentForm'
    | '/posts/CreatePostForm'
    | '/posts/PostDetails'
    | '/posts/Posts'
    | '/posts/createPostAction'
    | '/posts/usePost'
    | '/posts/usePosts'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/posts/CreateCommentForm'
    | '/posts/CreatePostForm'
    | '/posts/PostDetails'
    | '/posts/Posts'
    | '/posts/createPostAction'
    | '/posts/usePost'
    | '/posts/usePosts'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  PostsCreateCommentFormRoute: typeof PostsCreateCommentFormRoute
  PostsCreatePostFormRoute: typeof PostsCreatePostFormRoute
  PostsPostDetailsRoute: typeof PostsPostDetailsRoute
  PostsPostsRoute: typeof PostsPostsRoute
  PostsCreatePostActionRoute: typeof PostsCreatePostActionRoute
  PostsUsePostRoute: typeof PostsUsePostRoute
  PostsUsePostsRoute: typeof PostsUsePostsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  PostsCreateCommentFormRoute: PostsCreateCommentFormRoute,
  PostsCreatePostFormRoute: PostsCreatePostFormRoute,
  PostsPostDetailsRoute: PostsPostDetailsRoute,
  PostsPostsRoute: PostsPostsRoute,
  PostsCreatePostActionRoute: PostsCreatePostActionRoute,
  PostsUsePostRoute: PostsUsePostRoute,
  PostsUsePostsRoute: PostsUsePostsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/posts/CreateCommentForm",
        "/posts/CreatePostForm",
        "/posts/PostDetails",
        "/posts/Posts",
        "/posts/createPostAction",
        "/posts/usePost",
        "/posts/usePosts"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/posts/CreateCommentForm": {
      "filePath": "posts/CreateCommentForm.tsx"
    },
    "/posts/CreatePostForm": {
      "filePath": "posts/CreatePostForm.tsx"
    },
    "/posts/PostDetails": {
      "filePath": "posts/PostDetails.tsx"
    },
    "/posts/Posts": {
      "filePath": "posts/Posts.tsx"
    },
    "/posts/createPostAction": {
      "filePath": "posts/createPostAction.ts"
    },
    "/posts/usePost": {
      "filePath": "posts/usePost.ts"
    },
    "/posts/usePosts": {
      "filePath": "posts/usePosts.ts"
    }
  }
}
ROUTE_MANIFEST_END */
