{
  "posts": [
    {
      "id": "1",
      "title": "Microservices Authentication Strategies",
      "content": "Exploring JWT, OAuth2, and API gateway patterns for secure distributed systems...",
      "timestamp": "2024-03-01T08:00:00"
    },
    {
      "id": "2",
      "title": "React Performance Optimization",
      "content": "Deep dive into memoization, virtualized lists, and concurrent mode...",
      "timestamp": "2024-03-01T09:15:00"
    },
    {
      "id": "3",
      "title": "State Management in React",
      "content": "Compare Redux Toolkit, Context API, and Zustand for different complexity needs. Use selectors for performance optimization.",
      "timestamp": "2025-03-15T09:15:00"
    },
    {
      "id": "4",
      "title": "React Hooks: useEffect vs useLayoutEffect",
      "content": "Compare Redux Toolkit, Context API, and Zustand for different complexity needs. Use selectors for performance optimization.",
      "timestamp": "2024-05-12T09:15:00"
    },
    {
      "id": "5",
      "title": "React Hooks: useMemo vs useCallback",
      "content": "Compare Redux Toolkit, Context API, and Zustand for different complexity needs. Use selectors for performance optimization.",
      "timestamp": "2024-07-12T09:15:00"
    },
    {
      "id": "6",
      "title": "React Hooks: useReducer vs useContext",
      "content": "Compare Redux Toolkit, Context API, and Zustand for different complexity needs. Use selectors for performance optimization.",
      "timestamp": "2024-09-12T09:15:00"
    },
    {
      "id": "7",
      "title": "React Hooks: useRef vs useImperativeHandle",
      "content": "Compare Redux Toolkit, Context API, and Zustand for different complexity needs. Use selectors for performance optimization.",
      "timestamp": "2024-11-12T09:15:00"
    },
    {
      "id": "8",
      "title": "React Hooks: useTransition vs useDeferredValue",
      "content": "Compare Redux Toolkit, Context API, and Zustand for different complexity needs. Use selectors for performance optimization.",
      "timestamp": "2025-01-12T09:15:00"
    },
    {
      "id": "9",
      "title": "React Hooks: useId vs useSyncExternalStore",
      "content": "Compare Redux Toolkit, Context API, and Zustand for different complexity needs. Use selectors for performance optimization.",
      "timestamp": "2025-03-12T09:15:00"
    },
    {
      "id": "10",
      "title": "React Hooks: useDebugValue vs useInsertionEffect",
      "content": "Compare Redux Toolkit, Context API, and Zustand for different complexity needs. Use selectors for performance optimization.",
      "timestamp": "2025-05-12T09:15:00"
    },
    {
      "id": "0.2808048855616546",
      "title": "The Post",
      "content": "The Post is Here",
      "timestamp": "2025-05-26T07:50:37.314Z"
    },
    {
      "id": "0.9260165251653895",
      "title": "The New Post 2",
      "content": "The New Post 2 Content",
      "timestamp": "2025-05-26T07:52:45.340Z"
    },
    {
      "id": "0.8790220207149629",
      "title": "The new Post Title 3",
      "content": "The new Post Title 3 content",
      "timestamp": "2025-05-26T07:57:47.683Z"
    },
    {
      "id": "0.7468270912011248",
      "title": "The new Post Title 3",
      "content": "The new Post Title 3",
      "timestamp": "2025-05-26T07:58:35.269Z"
    },
    {
      "id": "0.9609347136682173",
      "title": "The new Post Title 5",
      "content": "The new Post Title 5",
      "timestamp": "2025-05-26T07:58:49.984Z"
    },
    {
      "id": "0.601497191266005",
      "title": "The new Post Title 6",
      "content": "The new Post Title 6",
      "timestamp": "2025-05-26T08:01:08.519Z"
    },
    {
      "id": "0.33451789334925075",
      "title": "The new Post 7",
      "content": "The new Post 7 content",
      "timestamp": "2025-05-26T08:07:49.819Z"
    },
    {
      "id": "0.47069733307784734",
      "title": "The new Post 8",
      "content": "The new Post 8",
      "timestamp": "2025-05-26T08:10:09.585Z"
    },
    {
      "id": "0.8107824427651198",
      "title": "The new Post 9",
      "content": "The new Post 9",
      "timestamp": "2025-05-26T08:12:54.518Z"
    },
    {
      "id": "0.4236791517718753",
      "title": "The new Post 11",
      "content": "The new Post 11",
      "timestamp": "2025-05-26T08:14:19.768Z"
    }
  ],
  "comments": [
    {
      "id": "1",
      "postId": "1",
      "author": "Security Architect",
      "content": "Have you considered mutual TLS for service-to-service communication?",
      "timestamp": "2024-03-01T09:30:00"
    },
    {
      "id": "2",
      "postId": "1",
      "author": "DevOps Engineer",
      "content": "What about token revocation strategies?",
      "timestamp": "2024-03-01T10:15:00"
    },
    {
      "id": "3",
      "postId": "3",
      "author": "Frontend Engineer",
      "content": "Zustand shines for microfrontend architectures.",
      "timestamp": "2024-02-14T14: 30: 00"
    },
    {
      "id": "4",
      "postId": "1",
      "author": "Mobile Dev",
      "content": "Remember to unsubscribe effects in useEffect!",
      "timestamp": "2024-02-14T15: 00: 00"
    },
    {
      "id": "5",
      "postId": "2",
      "author": "Backend Engineer",
      "content": "useSyncExternalStore is a powerful tool!",
      "timestamp": "2024-02-14T15: 30: 00"
    },
    {
      "id": "6",
      "postId": "2",
      "author": "Frontend Lead",
      "content": "useInsertionEffect is a new addition!",
      "timestamp": "2024-02-14T16: 00: 00"
    },
    {
      "id": "7",
      "postId": "7",
      "author": "ReactJS Engineer",
      "content": "useDebugValue is a great tool for debugging!",
      "timestamp": "2024-02-14T16: 30: 00"
    },
    {
      "id": "8",
      "postId": "7",
      "author": "Engineering Manager",
      "content": "Implement automated code quality gates in CI pipeline.",
      "timestamp": "2024-02-14T16: 30: 00"
    },
    {
      "id": "9",
      "postId": "3",
      "author": "CI/CD Pipelines",
      "content": "Implement automated testing, containerization, and canary deployments using GitHub Actions or GitLab CI.",
      "timestamp": "2024-02-14T16: 30: 00"
    },
    {
      "id": "10",
      "postId": "3",
      "author": "React Core Team",
      "content": "Avoid over-optimization - profile first!",
      "timestamp": "2024-02-14T16: 30: 00"
    },
    {
      "id": "11",
      "postId": "3",
      "author": "Security Lead",
      "content": "Rotate keys quarterly and monitor JWT leakage.",
      "timestamp": "2024-02-14T16: 30: 00"
    },
    {
      "id": "12",
      "postId": "3",
      "author": "Testing Strategies",
      "content": "Pyramid testing: 70% unit, 20% integration, 10% E2E. Use mocking for external dependencies.",
      "timestamp": "2024-02-14T16: 30: 00"
    },
    {
      "id": "13",
      "postId": "5",
      "author": "Cloud Architect",
      "content": "Consider using OAuth2.1 specifications for improved security",
      "timestamp": "2024-03-02T11:00:00"
    },
    {
      "id": "14",
      "postId": "8",
      "author": "Senior React Dev",
      "content": "Remember to use React Profiler for performance measurements",
      "timestamp": "2024-03-02T14:30:00"
    },
    {
      "id": "15",
      "postId": "3",
      "author": "State Management Expert",
      "content": "Jotai provides excellent atomic state management patterns",
      "timestamp": "2024-03-03T09:45:00"
    },
    {
      "id": "16",
      "postId": "6",
      "author": "React Core Contributor",
      "content": "Always clean up event listeners in useEffect cleanup functions",
      "timestamp": "2024-03-03T16:15:00"
    },
    {
      "id": "17",
      "postId": "4",
      "author": "Performance Engineer",
      "content": "Use the useCallback hook judiciously - not every function needs memoization",
      "timestamp": "2024-03-04T10:00:00"
    },
    {
      "id": "18",
      "postId": "6",
      "author": "React Developer",
      "content": "Remember to clean up event listeners in useEffect",
      "timestamp": "2024-03-05T09:00:00"
    },
    {
      "id": "19",
      "postId": "5",
      "author": "UI Engineer",
      "content": "useLayoutEffect is essential for DOM measurements before paint",
      "timestamp": "2024-03-05T10:30:00"
    },
    {
      "id": "20",
      "postId": "4",
      "author": "Performance Expert",
      "content": "Avoid overusing layout effects for better performance",
      "timestamp": "2024-03-05T11:45:00"
    },
    {
      "id": "21",
      "postId": "5",
      "author": "Senior Dev",
      "content": "useMemo should be used for expensive calculations",
      "timestamp": "2024-03-05T12:15:00"
    },
    {
      "id": "22",
      "postId": "5",
      "author": "Tech Lead",
      "content": "Profile before optimizing with useCallback",
      "timestamp": "2024-03-05T13:00:00"
    },
    {
      "id": "23",
      "postId": "7",
      "author": "Frontend Architect",
      "content": "Memoization doesn't prevent re-renders, use composition",
      "timestamp": "2024-03-05T14:30:00"
    },
    {
      "id": "24",
      "postId": "6",
      "author": "State Management Expert",
      "content": "Combine useReducer with Context API for global state",
      "timestamp": "2024-03-05T15:00:00"
    },
    {
      "id": "25",
      "postId": "6",
      "author": "React Mentor",
      "content": "Use immer for simpler reducer logic",
      "timestamp": "2024-03-05T16:15:00"
    },
    {
      "id": "26",
      "postId": "6",
      "author": "Testing Specialist",
      "content": "Mock context providers in component tests",
      "timestamp": "2024-03-05T17:30:00"
    },
    {
      "id": "27",
      "postId": "8",
      "author": "Code Reviewer",
      "content": "Keep reducers pure and side-effect free",
      "timestamp": "2024-03-05T18:45:00"
    },
    {
      "id": "28",
      "postId": "7",
      "author": "UI Developer",
      "content": "useRef is perfect for form element references",
      "timestamp": "2024-03-06T08:00:00"
    },
    {
      "id": "29",
      "postId": "7",
      "author": "Accessibility Expert",
      "content": "Combine refs with aria-labels for a11y",
      "timestamp": "2024-03-06T09:15:00"
    },
    {
      "id": "30",
      "postId": "7",
      "author": "Animation Specialist",
      "content": "Use imperative handles for animation controls",
      "timestamp": "2024-03-06T10:30:00"
    },
    {
      "id": "31",
      "postId": "10",
      "author": "Performance Engineer",
      "content": "Avoid frequent updates to ref values",
      "timestamp": "2024-03-06T11:45:00"
    },
    {
      "id": "32",
      "postId": "8",
      "author": "Concurrent Mode Expert",
      "content": "useTransition is key for smooth UI updates",
      "timestamp": "2024-03-06T12:00:00"
    },
    {
      "id": "33",
      "postId": "8",
      "author": "React Trainer",
      "content": "Deferred values help prioritize urgent updates",
      "timestamp": "2024-03-06T13:15:00"
    },
    {
      "id": "34",
      "postId": "8",
      "author": "UX Engineer",
      "content": "Combine with skeleton loaders for better UX",
      "timestamp": "2024-03-06T14:30:00"
    },
    {
      "id": "35",
      "postId": "10",
      "author": "Performance Analyst",
      "content": "Measure Lighthouse scores before/after",
      "timestamp": "2024-03-06T15:45:00"
    },
    {
      "id": "36",
      "postId": "9",
      "author": "Testing Lead",
      "content": "useId generates stable IDs for testing",
      "timestamp": "2024-03-07T08:00:00"
    },
    {
      "id": "37",
      "postId": "9",
      "author": "SSR Expert",
      "content": "Sync external stores with useSyncExternalStore",
      "timestamp": "2024-03-07T09:15:00"
    },
    {
      "id": "38",
      "postId": "9",
      "author": "DevTools Contributor",
      "content": "useDebugValue enhances custom hook inspection",
      "timestamp": "2024-03-07T10:30:00"
    },
    {
      "id": "39",
      "postId": "9",
      "author": "Style System Architect",
      "content": "Use insertion effect for dynamic styles",
      "timestamp": "2024-03-07T11:45:00"
    },
    {
      "id": "40",
      "postId": "10",
      "author": "Security Engineer",
      "content": "Validate hook dependencies carefully",
      "timestamp": "2024-03-07T12:00:00"
    },
    {
      "id": "41",
      "postId": "10",
      "author": "React Consultant",
      "content": "Prefer custom hooks over complex effects",
      "timestamp": "2024-03-07T13:15:00"
    },
    {
      "id": "42",
      "postId": "10",
      "author": "Code Quality Lead",
      "content": "Add eslint-plugin-react-hooks for validation",
      "timestamp": "2024-03-07T14:30:00"
    },
    {
      "id": "43",
      "postId": "10",
      "author": "Documentation Specialist",
      "content": "Document hook rules in component guidelines",
      "timestamp": "2024-03-07T15:45:00"
    }
  ]
}